import ReduxTest1 from "./reduxTest/ReduxTest1";

function App() {
  return (
    <>
      <h3>Redux에 대해 알아보기</h3>
      <ReduxTest1 />
    </>
  );
}

export default App;

/*
  개발 전 계획을 세우기 위해서 자주 나오는 말
  DDD vs CBD

  DDD(Domain Driven Design)
  - 업무(도메인) 중심으로 시스템을 설계
  - 복잡한 B2B 서비스, 급융, 보험, ERP에서 많이 사용됨
  - NestJS, Springboot(백엔드)에서 설계를 할 때 사용하는 기법

  CBD(Component Based Development)
  - 컴포넌트 기반 개발
  - 부품처럼 조립가능한 컴포넌트 단위로 개발하는 기법
  - 리액트에서 작은 UI 단위로 쪼개는 방식으로 설계하는 기법
  - 기능 뿐만 아니라 UI, 서비스 기능, API 단위도 컴포넌트처럼 나눌 수 있음
  
  - 컴포넌트 이름, 설명, 주요 기능, props 정의

  ex) 
  컴포넌트 이름, ex) UserProflie
  컴포넌트 설명, ex) 사용자의 이름과 프로필 이미지를 표시하며 클릭시 상세 페이지로 이동
  컴포넌트 주요 기능 ex)  프로필 이미지 출력, 사용자이름 출력
  props 정의 ex) name - string - 필수여부

  UserProfile(트리구조)
  L Image(프로필 이미지)
  L Name (텍스트)

  스타일 가이드
  원형 프로필 사진 너비: 80px
  이름은 굵은 고딕체 
  모바일 기준 100% 반응형 처리

  관련 이슈 / todo
    L이미지 로딩 실패시 처리방법
    L dark mode 스타일 추가 예정

  버전 관리
  - 어떤 파일이나 기능, 문서가 몇 번째 수정인지 기록하는 시스템
  - 문서 단위로 관리해야할 때는 프로젝트명_v1.0
  -  실무나 git, 태그나 릴리즈를 기록할 때도 이 방식을 사용
  
  ex) 문서 버전 예시
    최초 생성 2025-07-05 perdy v1.0
    클릭 기능 추가 2025-07-07  ... v1.1
    (큰 개편) ... v2.0

  ex) 버전 관리 기록
  v1.0  기본 프로필 카드 컴포넌트 생성 (name,image,props포함)
  v1.1  onClick 이벤트를 props에 추가 
  v1.2  image가 없을 때 기본 이미지 처리 추가(에러)
  v1.3  스타일 개선(폰트크기,그림자 추가..) 
  v2.0  새로운 피드 생성 (기능 확장)
  v2.1.0 피드에 좋아요 기능 추가
  v2.1.1 피드 이미지가 나오지 않는 현상 추가(버그 수정)
  v2.1.2 모바일에서 피드 텍스트가 잘리는 현상 수정

  ex) v2.1.2
    - 첫 번째 : 주 버전 - 큰 기능을 추가하거나 변경, 호환성이 바뀌는 업데이트
    - 두 번째 : 부 버전 - 새로운 기능을 추가
    - 세 번째 : 패치 버전 - 버그 수정, 성능 개선, 사소한 변경


*/
